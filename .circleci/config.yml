version: 2
jobs:
    #Article Service
    article:
        working_directory: ~/SOA2019_Group12/service/article-service
        docker:
            - image: circleci/node:latest
        steps:
            - setup_remote_docker:
                docker_layer_caching: true
            - checkout:
                path: ~/SOA2019_Group12
            - run:
                name: Build Article service's Image
                command: |
                    docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
                    docker image build -t $DOCKER_USERNAME/article_service .
                    docker image push $DOCKER_USERNAME/article_service
    #API Gateway
    api-gateway:
        working_directory: ~/SOA2019_Group12/service/APIgateway
        docker:
            - image: circleci/node:latest
        steps:
            - setup_remote_docker:
                docker_layer_caching: true
            - checkout:
                path: ~/SOA2019_Group12
            - run:
                name: Build API Gateway's Image
                command: |
                    docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
                    docker image build -t $DOCKER_USERNAME/api_gateway .
                    docker image push $DOCKER_USERNAME/api_gateway
    #Eureka
    eureka:
        working_directory: ~/SOA2019_Group12/service/Eureka
        docker:
            - image: circleci/openjdk:latest
        steps:
            - setup_remote_docker:
                docker_layer_caching: true
            - checkout:
                path: ~/SOA2019_Group12
            - run:
                name: Build Eureka's Image
                command: |
                    docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
                    docker image build -t $DOCKER_USERNAME/eureka_server .
                    docker image push $DOCKER_USERNAME/eureka_server
    #Authentication Service
    authentication:
        working_directory: ~/SOA2019_Group12/service/authentication-service
        docker:
            - image: circleci/node:11.13.0
        steps:
            - setup_remote_docker:
                docker_layer_caching: true
            - checkout:
                path: ~/SOA2019_Group12
            - run:
                name: Build Authentication Service's Image
                command: |
                    docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
                    docker image build -t $DOCKER_USERNAME/authentication_service .
                    docker image push $DOCKER_USERNAME/authentication_service
    #Matching Service
    matching:
        working_directory: ~/SOA2019_Group12/service/matching-service
        docker:
            - image: circleci/node:latest
        steps:
            - setup_remote_docker:
                docker_layer_caching: true
            - checkout:
                path: ~/SOA2019_Group12
            - run:
                name: Build Matching Service's Image
                command: |
                    docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
                    docker image build -t $DOCKER_USERNAME/matching_service .
                    docker image push $DOCKER_USERNAME/matching_service
    deploy:
        machine:
            enabled: true
        steps:
            - add_ssh_keys:
                fingerprints:
                    - '87:e4:38:68:08:c7:12:23:dc:00:82:f3:29:7b:3f:3e'
            - run:
                name: Deploy Over SSH
                command: |
                    ssh -vv -o "StrictHostKeyChecking=no" ${SSH_USER}@${SSH_HOST} bash -ic '"cd /home/earth/SOA2019_Group12 && \
                        sudo git pull origin master && \
                        sudo docker-compose stop && \
                        sudo docker-compose pull && \
                        sudo docker-compose up -d"'

workflows:
    version: 2
    compile:
        jobs:
            - article:
                filters:
                    branches:
                        only:
                            master
            - api-gateway:
                filters:
                    branches:
                        only:
                            master
            - eureka:
                filters:
                    branches:
                        only:
                            master
            - authentication:
                filters:
                    branches:
                        only:
                            master
            - matching:
                filters:
                    branches:
                        only:
                            master
            - deploy:
                requires:
                    - article
                    - authentication
                    - api-gateway
                    - eureka
                    - matching
